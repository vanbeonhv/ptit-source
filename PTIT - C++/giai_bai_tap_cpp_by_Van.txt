#1
------------------------------------------------------------------------
#include<bits/stdc++.h>

using namespace std;
int main(){
	int n, sum = 0; cin >> n;
	
	while(n){
		int a = n % 10;
		sum += a;
		n /= 10;
	}
	cout << sum;
	return 0;
}

#2
------------------------------------------------------------------------
bool isPrime(int n){
	if(n <= 1){
		return false;
	}
	for(int i = 2; i <= sqrt(n); i++){
		if(n % i == 0) return false; 
	}
	return true;
}

int main(){
	int k; cin >> k;
	while(k--){
		int n; cin >> n;
		if(isPrime(n)){
			cout << "YES\n";
		} else{
			cout << "NO\n";
		}
	}
	return 0;
}

#3
------------------------------------------------------------------------
int count(int n){
	int cnt = 0;
	while(n){
		cnt++;
		n /= 10;
	}
	return cnt;
}

int main(){
	int n; cin >> n;
	cout << count(n);
	return 0;
}

#4
------------------------------------------------------------------------
typedef long long ll;

bool giamDan(ll n){
	ll b = 10;
	while(n){
		ll a = n % 10;
		if(a > b){
			return false;
		}
		b = a;
		n /= 10;
	}
	return true;
}

int main(){
	int k; cin >> k;
	while(k--){
		ll n; cin >> n;
		if(giamDan(n)){
			cout << "YES\n";
		} else {
			cout << "NO\n";
		}
	}
	return 0;
}

#5
------------------------------------------------------------------------
void soChan(int a[], int n, vector<int> &b) {
	for(int i = 0; i < n; i++) {
		if(a[i] % 2 == 0) {
			b.push_back(a[i]);
		}
	}
}

int main() {
	int k;
	cin >> k;
	while(k--) {
		int a[100];
		vector<int> b;
		int n;
		cin >> n;
		for(int i = 0; i < n; i++) {
			cin >> a[i];
		}

		soChan(a, n, b);
		for(int num : b){
			cout << num << " ";
		}
		cout << endl;
	}

	return 0;
}

#5-oop
------------------------------------------------------------------------
class soNguyen {
		int n, a[100];
		public: nhap() {
			cin >> n;
			for(int i = 0; i < n; i++) {
				cin >> a[i];
			}
		}

		public: soChan(vector<int> &b) {
			for(int i = 0; i < n; i++) {
				if(a[i] % 2 == 0) {
					b.push_back(a[i]);
				}
			}
		}

};


int main() {

	int k;
	cin >> k;
	while(k--) {
		soNguyen d;
		d.nhap();
		vector<int> b;
		d.soChan(b);
		for(int c: b) {
			cout << c << " ";
		}
		cout << endl;
	}

	return 0;
}


#6
------------------------------------------------------------------------
class soNguyenTo{
	int n, a[100];
	public: nhap(){
		cin >> n;
		for(int i = 0; i < n; i++){
			cin >> a[i];
		}
	}
	
	private: bool isPrime(int x){
		if(x <= 1){
			return false;
		}
		
		for(int i = 2; i <= sqrt(x); i++){
			if(x % i == 0){
				return false;
			}
		}
		return true;
	}
	
	public: laySoNguyenTo(vector<int> &b){
		for(int i = 0; i < n; i++){
			if(isPrime(a[i])){
				b.push_back(a[i]);
			}
		}
	}
};

int main(){
	int k; cin >> k;
	while(k--){
		soNguyenTo d;
		d.nhap();
		vector<int> b;
		d.laySoNguyenTo(b);
		for(int c : b){
			cout << c << " ";
		}
		cout << endl;
	}
	
	return 0;
}

#7
------------------------------------------------------------------------
#include<bits/stdc++.h>

using namespace std;

class soNguyen{
	int n, a[100];
	public: nhap(){
		cin >> n;
		for(int i = 0; i < n; i++){
			cin >> a[i];
		}
	}
	
	public: bool doiXung(){
		for(int i = 0; i < n / 2; i++){
			if(a[i] != a[n - i - 1]){
				return false;
			}
		}
		return true;
	}
	
};

int main(){
	int k; cin >> k;
	while(k--){
		soNguyen d;
		d.nhap();
		if(d.doiXung()) cout << "YES\n";
		else cout << "NO\n";
	}
	
	return 0;
}

#8
------------------------------------------------------------------------
#include<bits/stdc++.h>

using namespace std;

class soNguyen{
	int N, A[100]={0};
	public: nhap(){
		cin >> N;
		for(int i = 0; i < N; i++){
			cin >> A[i];
		}
	}
	
	public: soLonNhat(){
		return *max_element(A, A + 100);
	}
	
	public: timViTri(int maxNum, vector<int> &viTri){
		for(int i = 0; i < N; i++){
			if(A[i] == maxNum){
				viTri.push_back(i);
			}
		}	
	}
};

int main(){
	int k; cin >> k;
	while(k--){
		soNguyen d;
		d.nhap();
		int maxNum = d.soLonNhat();
		cout << maxNum << endl;

		vector<int> viTri;
		d.timViTri(maxNum, viTri);
		for(int i: viTri){
			cout << i << " ";
		}
		cout << endl;
	}

	return 0;
}

#9
------------------------------------------------------------------------
#include<bits/stdc++.h>

using namespace std;

class soNguyen{
	int N, A[100];
	public: getN(){
		return N;
	}
	
	public: nhap(){
		cin >> N;
		for(int i = 0; i < N; i++){
			cin >> A[i];
		}
	}
	
	public: daoNguoc(int B[]){
		for(int i = 0; i < N; i++){
			B[N - i - 1] = A[i];
		}
	}
};

int main(){
	soNguyen d;
	d.nhap();
	int B[100];
	d.daoNguoc(B);
	for(int i = 0; i < d.getN(); i++){
		cout << B[i] << " ";
	}
	cout << endl;
	return 0;
}

#10
------------------------------------------------------------------------
#include<bits/stdc++.h>

using namespace std;

class soNguyen{
	int N, A[100];
	public: void nhap(){
		cin >> N;
		for(int i = 0; i < N; i++){
			cin >> A[i];
		}
	}
	
	public: int timSoNhoNhat(){
		return *min_element(A, A+N);
	}
	
	public: int timSoNhoThuHai(int minNum){
		int secondMinNum = 1000;
		for(int i = 0; i < N; i++){
			if(A[i] < secondMinNum && A[i] != minNum){
				secondMinNum = A[i];
			} 
		}
		return secondMinNum;
	}
};

int main(){
	
	soNguyen d;
	d.nhap();
	int minNum = d.timSoNhoNhat();
	cout << minNum << " " << d.timSoNhoThuHai(minNum);
	return 0;
}

#11 Giống bài #6
------------------------------------------------------------------------


#12
------------------------------------------------------------------------
#include<bits/stdc++.h>

using namespace std;

class soNguyen{
	int N, A[100];
	public:
		void nhap(){
			cin >> N;
			for(int i = 0; i < N; i++){
				cin >> A[i];
			}
		}
		
		void sapXep(){
			sort(A, A + N);
		}
		
		void in(){
			for(int i = 0; i < N; i++){
				cout << A[i] << " ";
			}
		}
};

int main(){
	soNguyen d;
	d.nhap();
	d.sapXep();
	d.in();
	return 0;
}

#13
------------------------------------------------------------------------
#include<bits/stdc++.h>

using namespace std;

class soNguyen{
	int N, A[100];
	public:
		void nhap(){
			cin >> N;
			for(int i = 0; i < N; i++){
				cin >> A[i];
			}
		}
		
		float trungBinh(){
			int sum = 0;
			for(int i = 0; i < N; i++){
				sum += A[i];
			}
			float soTB = (float)sum / N;
			return soTB;
		}
};

int main(){
	
	soNguyen d;
	d.nhap();
	float soTB = d.trungBinh();
	cout << fixed << setprecision(3) << soTB;
	return 0;
}

#14
------------------------------------------------------------------------
#include<bits/stdc++.h>

using namespace std;

class xau{
	string S;
	public:
		void nhap(){
			getline(cin ,S);
		}
		
		string getS(){
			return S;	
		} 
		
		void phanTich(int &alpha, int &digit, int &other){
			for(char c: S){
				if(isdigit(c)) digit++;
				else if(isalpha(c)) alpha++;
				else other++;
			}
		}
};

int main(){
	xau s;
	s.nhap();
	int alpha = 0, digit = 0, other = 0;
	s.phanTich(alpha, digit, other);
	cout << alpha << " " << digit << " " << other;
	return 0;
}

#15
------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;

int main(){
	string s;
	cin >> s;
	cout << s.size() - 1;
}


#16
------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;

class xau{
	string s;
	public:
		void nhap(){
			getline(cin, s);
		}
		int soTu(){
			int count = 0;
			stringstream ss(s);
			string temp;
			while(ss >> temp){
				count++;
			}
			return count;
		}
};

int main(){
	int k; cin >> k;
	cin.ignore();
	while(k--){
		xau d;
		d.nhap();
		cout << d.soTu() << endl;
	}
	return 0;
}

#17
------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;

struct MatHang{
	int ma;
	string ten, nhom;
	float giaMua, giaBan;
};

bool compareMatHang(MatHang a, MatHang b){
	return a.giaBan - a.giaMua > b.giaBan - b.giaMua;
}

class khoHang{
	int n;
	vector<MatHang> danhSach;
	public:
		void nhap(int maHang){
			MatHang m;
			m.ma = maHang;
			getline(cin, m.ten);
			getline(cin, m.nhom);
			cin >> m.giaMua >> m.giaBan;
			cin.ignore();
			danhSach.push_back(m);
		}
		
		void sapXep(){
			sort(danhSach.begin(), danhSach.end(), compareMatHang);
		}
		
		void in(){
			for(MatHang m: danhSach){
				float loiNhuan = m.giaBan - m.giaMua;
				cout << m.ma << " " << m.ten << " " << m.nhom << " " << fixed << setprecision(2) << loiNhuan << endl;
			}
		}
};


int main(){
	int k; cin >> k;
	cin.ignore();
	khoHang kh;
	for(int i = 0; i < k; i++){
		kh.nhap(i+1);
	}
	kh.sapXep();
	kh.in();
	return 0;
}

#18
------------------------------------------------------------------------

